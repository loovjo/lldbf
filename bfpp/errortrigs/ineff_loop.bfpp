(? >a)

// Case 1: Zero from start
(!a) [-]

// Case 2: Zero from clear

+ unstable [ > ] [-]

// Case 3: known inside macro
def zero_check(? a >b c) {
    (!a) [-] [-]
}

// Negative case 1: recursive loop

(? >a b)
+++ [
    (!b) [-] // Should not be optimized, b is changed later in the loop
    (!b) +
    (!a)
]