inv = {}

for i in range(1, 256):
    # Find j such that i * j = 1 (mod 256)
    for j in range(1, 256):
        if (i * j) % 256 == 1:
            inv[i] = j

# N = x * y / z + K (mod 256)
# minimize abs(x) + abs(y) + abs(z)

def abs_256(n):
    return min(n, 256 - n)
def find_xyzk(n):
    best = (-1, -1, -1, -1)
    best_score = -1
    for x in range(256):
        for y in range(256):
            for z in inv.keys():
                res_minus_k = (x * y * inv[z]) % 256
                k = (n - res_minus_k) % 256

                score = abs_256(x) + abs_256(y) + abs_256(z) + abs_256(k)

                if best_score == -1 or score < best_score:
                    best_score = score
                    best = (x, y, z, k)

    return best


precomp_xyzk_list = [
    (0, 0, 1, 0),  # 0
    (0, 0, 1, 1),  # 1
    (0, 0, 1, 2),  # 2
    (0, 0, 1, 3),  # 3
    (0, 0, 1, 4),  # 4
    (0, 0, 1, 5),  # 5
    (2, 3, 1, 0),  # 6
    (2, 3, 1, 1),  # 7
    (2, 4, 1, 0),  # 8
    (3, 3, 1, 0),  # 9
    (2, 5, 1, 0),  # 10
    (2, 5, 1, 1),  # 11
    (3, 4, 1, 0),  # 12
    (3, 4, 1, 1),  # 13
    (2, 7, 1, 0),  # 14
    (3, 5, 1, 0),  # 15
    (4, 4, 1, 0),  # 16
    (4, 4, 1, 1),  # 17
    (3, 6, 1, 0),  # 18
    (3, 6, 1, 1),  # 19
    (4, 5, 1, 0),  # 20
    (3, 7, 1, 0),  # 21
    (3, 7, 1, 1),  # 22
    (4, 6, 1, 255),  # 23
    (4, 6, 1, 0),  # 24
    (5, 5, 1, 0),  # 25
    (5, 5, 1, 1),  # 26
    (3, 9, 1, 0),  # 27
    (4, 7, 1, 0),  # 28
    (4, 7, 1, 1),  # 29
    (5, 6, 1, 0),  # 30
    (5, 6, 1, 1),  # 31
    (4, 8, 1, 0),  # 32
    (2, 2, 249, 253),  # 33
    (2, 2, 249, 254),  # 34
    (2, 2, 249, 255),  # 35
    (2, 2, 249, 0),  # 36
    (1, 3, 7, 0),  # 37
    (1, 3, 7, 1),  # 38
    (1, 3, 7, 2),  # 39
    (1, 3, 7, 3),  # 40
    (1, 3, 7, 4),  # 41
    (6, 7, 1, 0),  # 42
    (1, 1, 251, 248),  # 43
    (1, 1, 251, 249),  # 44
    (1, 1, 251, 250),  # 45
    (1, 1, 251, 251),  # 46
    (1, 1, 251, 252),  # 47
    (1, 1, 251, 253),  # 48
    (1, 1, 251, 254),  # 49
    (1, 1, 251, 255),  # 50
    (1, 1, 251, 0),  # 51
    (1, 1, 251, 1),  # 52
    (1, 1, 251, 2),  # 53
    (1, 1, 251, 3),  # 54
    (1, 1, 251, 4),  # 55
    (1, 1, 9, 255),  # 56
    (1, 1, 9, 0),  # 57
    (1, 1, 9, 1),  # 58
    (1, 1, 9, 2),  # 59
    (1, 1, 9, 3),  # 60
    (1, 1, 9, 4),  # 61
    (1, 1, 9, 5),  # 62
    (1, 1, 9, 6),  # 63
    (8, 8, 1, 0),  # 64
    (1, 1, 249, 248),  # 65
    (1, 1, 249, 249),  # 66
    (1, 1, 249, 250),  # 67
    (1, 1, 249, 251),  # 68
    (1, 1, 249, 252),  # 69
    (1, 1, 249, 253),  # 70
    (1, 1, 249, 254),  # 71
    (1, 1, 249, 255),  # 72
    (1, 1, 249, 0),  # 73
    (1, 1, 249, 1),  # 74
    (1, 1, 249, 2),  # 75
    (1, 1, 249, 3),  # 76
    (1, 1, 249, 4),  # 77
    (1, 1, 253, 249),  # 78
    (1, 1, 253, 250),  # 79
    (1, 1, 253, 251),  # 80
    (1, 1, 253, 252),  # 81
    (1, 1, 253, 253),  # 82
    (1, 1, 253, 254),  # 83
    (1, 1, 253, 255),  # 84
    (1, 1, 253, 0),  # 85
    (1, 1, 253, 1),  # 86
    (1, 1, 253, 2),  # 87
    (1, 1, 253, 3),  # 88
    (1, 1, 253, 4),  # 89
    (1, 1, 253, 5),  # 90
    (1, 1, 253, 6),  # 91
    (1, 1, 253, 7),  # 92
    (1, 1, 245, 0),  # 93
    (1, 1, 245, 1),  # 94
    (1, 1, 245, 2),  # 95
    (1, 2, 251, 250),  # 96
    (1, 2, 251, 251),  # 97
    (1, 2, 251, 252),  # 98
    (1, 2, 251, 253),  # 99
    (1, 2, 251, 254),  # 100
    (1, 2, 251, 255),  # 101
    (1, 2, 251, 0),  # 102
    (1, 2, 251, 1),  # 103
    (1, 2, 251, 2),  # 104
    (1, 2, 251, 3),  # 105
    (1, 2, 251, 4),  # 106
    (1, 2, 7, 253),  # 107
    (1, 2, 7, 254),  # 108
    (1, 2, 7, 255),  # 109
    (1, 2, 7, 0),  # 110
    (1, 2, 7, 1),  # 111
    (1, 2, 7, 2),  # 112
    (1, 2, 7, 3),  # 113
    (1, 2, 9, 0),  # 114
    (1, 2, 9, 1),  # 115
    (1, 2, 9, 2),  # 116
    (1, 2, 9, 3),  # 117
    (1, 2, 9, 4),  # 118
    (1, 2, 9, 5),  # 119
    (1, 2, 9, 6),  # 120
    (1, 2, 9, 7),  # 121
    (1, 2, 9, 8),  # 122
    (1, 2, 9, 9),  # 123
    (1, 2, 9, 10),  # 124
    (1, 2, 9, 11),  # 125
    (1, 2, 9, 12),  # 126
    (1, 2, 9, 13),  # 127
    (8, 16, 1, 0),  # 128
    (1, 2, 13, 247),  # 129
    (1, 2, 13, 248),  # 130
    (1, 2, 13, 249),  # 131
    (1, 2, 13, 250),  # 132
    (1, 2, 13, 251),  # 133
    (1, 2, 13, 252),  # 134
    (1, 2, 13, 253),  # 135
    (1, 2, 13, 254),  # 136
    (1, 2, 13, 255),  # 137
    (1, 2, 13, 0),  # 138
    (1, 2, 247, 253),  # 139
    (1, 2, 247, 254),  # 140
    (1, 2, 247, 255),  # 141
    (1, 2, 247, 0),  # 142
    (1, 2, 247, 1),  # 143
    (1, 2, 249, 254),  # 144
    (1, 2, 249, 255),  # 145
    (1, 2, 249, 0),  # 146
    (1, 2, 249, 1),  # 147
    (1, 2, 249, 2),  # 148
    (1, 2, 5, 251),  # 149
    (1, 2, 5, 252),  # 150
    (1, 2, 5, 253),  # 151
    (1, 2, 5, 254),  # 152
    (1, 2, 5, 255),  # 153
    (1, 2, 5, 0),  # 154
    (1, 2, 5, 1),  # 155
    (1, 2, 5, 2),  # 156
    (1, 2, 5, 3),  # 157
    (1, 2, 5, 4),  # 158
    (1, 2, 5, 5),  # 159
    (1, 2, 5, 6),  # 160
    (1, 1, 3, 246),  # 161
    (1, 1, 3, 247),  # 162
    (1, 1, 3, 248),  # 163
    (1, 1, 3, 249),  # 164
    (1, 1, 3, 250),  # 165
    (1, 1, 3, 251),  # 166
    (1, 1, 3, 252),  # 167
    (1, 1, 3, 253),  # 168
    (1, 1, 3, 254),  # 169
    (1, 1, 3, 255),  # 170
    (1, 1, 3, 0),  # 171
    (1, 1, 3, 1),  # 172
    (1, 1, 3, 2),  # 173
    (1, 1, 3, 3),  # 174
    (1, 1, 3, 4),  # 175
    (1, 1, 3, 5),  # 176
    (1, 1, 3, 6),  # 177
    (1, 1, 3, 7),  # 178
    (1, 1, 3, 8),  # 179
    (1, 1, 7, 253),  # 180
    (1, 1, 7, 254),  # 181
    (1, 1, 7, 255),  # 182
    (1, 1, 7, 0),  # 183
    (1, 1, 7, 1),  # 184
    (1, 1, 7, 2),  # 185
    (1, 1, 7, 3),  # 186
    (1, 1, 7, 4),  # 187
    (1, 1, 7, 5),  # 188
    (1, 1, 7, 6),  # 189
    (1, 1, 7, 7),  # 190
    (1, 1, 7, 8),  # 191
    (8, 8, 255, 0),  # 192
    (1, 1, 247, 250),  # 193
    (1, 1, 247, 251),  # 194
    (1, 1, 247, 252),  # 195
    (1, 1, 247, 253),  # 196
    (1, 1, 247, 254),  # 197
    (1, 1, 247, 255),  # 198
    (1, 1, 247, 0),  # 199
    (1, 1, 5, 251),  # 200
    (1, 1, 5, 252),  # 201
    (1, 1, 5, 253),  # 202
    (1, 1, 5, 254),  # 203
    (1, 1, 5, 255),  # 204
    (1, 1, 5, 0),  # 205
    (1, 1, 5, 1),  # 206
    (1, 1, 5, 2),  # 207
    (1, 1, 5, 3),  # 208
    (1, 1, 5, 4),  # 209
    (1, 1, 5, 5),  # 210
    (1, 1, 5, 6),  # 211
    (1, 1, 5, 7),  # 212
    (1, 1, 5, 8),  # 213
    (6, 7, 255, 0),  # 214
    (1, 3, 249, 252),  # 215
    (1, 3, 249, 253),  # 216
    (1, 3, 249, 254),  # 217
    (1, 3, 249, 255),  # 218
    (1, 3, 249, 0),  # 219
    (2, 2, 7, 0),  # 220
    (2, 2, 7, 1),  # 221
    (2, 2, 7, 2),  # 222
    (2, 2, 7, 3),  # 223
    (4, 8, 255, 0),  # 224
    (5, 6, 255, 255),  # 225
    (5, 6, 255, 0),  # 226
    (4, 7, 255, 255),  # 227
    (4, 7, 255, 0),  # 228
    (3, 9, 255, 0),  # 229
    (5, 5, 255, 255),  # 230
    (5, 5, 255, 0),  # 231
    (4, 6, 255, 0),  # 232
    (4, 6, 255, 1),  # 233
    (3, 7, 255, 255),  # 234
    (3, 7, 255, 0),  # 235
    (4, 5, 255, 0),  # 236
    (3, 6, 255, 255),  # 237
    (3, 6, 255, 0),  # 238
    (4, 4, 255, 255),  # 239
    (4, 4, 255, 0),  # 240
    (3, 5, 255, 0),  # 241
    (2, 7, 255, 0),  # 242
    (3, 4, 255, 255),  # 243
    (3, 4, 255, 0),  # 244
    (2, 5, 255, 255),  # 245
    (2, 5, 255, 0),  # 246
    (3, 3, 255, 0),  # 247
    (2, 4, 255, 0),  # 248
    (2, 3, 255, 255),  # 249
    (2, 3, 255, 0),  # 250
    (0, 0, 1, 251),  # 251
    (0, 0, 1, 252),  # 252
    (0, 0, 1, 253),  # 253
    (0, 0, 1, 254),  # 254
    (0, 0, 1, 255),  # 255
]

for i, (x, y, z, k) in enumerate(precomp_xyzk_list):
    assert z in inv.keys()
    assert (x * y * inv[z] + k) % 256 == i

